install.packages("KernSmooth")
library(KernSmooth)
search
search()
?strptime
cube <- function(x,n) {x^3}
cube(3)
x <- 1:10
if(x>5) {x<-0}
if(x>5) {x<-0}
if(x>5) {
x <-0
}
f <- function(x) P
f <- function(x) {}
f <- function(x) {g <- function(y){y+z} z<-4
f <- function(x) {
g <- function(y) {}
{}
{}
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x<3) {NA} else {10}
y
l <- c("Apple")
k <- c("Banana")
l+k
directory <- c("/Users/damyant_gill/Documents/Coursera/R\ Programming/Week\ 2/specdata/")
paste(directory,"001","")
directory <- c("/Users/damyant_gill/Documents/Coursera/R\ Programming/Week\ 2/specdata/")
id <- 1
paste(directory,id,"")
paste(directory,c(id),"")
paste(directory,c(id),".csv","")
paste(directory,c(id),".csv",sep="",collapse="")
directory <- c("/Users/damyant_gill/Documents/Coursera/R\ Programming/Week\ 2/specdata/")
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
file
id <- 11
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
file
id <- 331
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
file
id <- 400
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
file
pollutant <- "crap"
if (pollutant != "sulfate" && pollutant != "nirtrate") {
print("Invalid pollutant")
}
pollutant <- "nitrate"
if (pollutant != "sulfate" && pollutant != "nitrate") {
print("Invalid pollutant")
} else {
print pollutant
}
if (pollutant != "sulfate" && pollutant != "nitrate") {
print("Invalid pollutant")
} else {
print pollutant
}
if (pollutant != "sulfate" && pollutant != "nitrate") {
print("Invalid pollutant")
} else {
print pollutant
}
if (pollutant != "sulfate" && pollutant != "nitrate") {
print("Invalid pollutant")
} else {
print(pollutant)
}
file
id <- 1
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else if(id > 332) {
print("Invalid Id")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
file
data <- read.csv(file)
data
mean(data[2],trim =0, na.rm = TRUE)
data[2]
x <- data[2]
mean(x,trim=0,nam.rm=TRUE)
mean(x)
x
data[complete.cases(data),]
na.omit(data[1])
na.omit(data[2])
data
na.omit(data[2])
mean(na.omit(data[2]),trim=0,na.rm=TRUE)
mean(na.omit(data[2]))
x <-na.omit(data[2])
mean(x)
isnumeric(x)
colmeans(data, na.rm=TRUE)
sapply(data, mean, na.rm = TRUE)
sapply(x, mean, na.rm = TRUE)
file
data <- read.csv(file, header = TRUE)
data
data[,1]
data[2]
data[1,1]
data[[1]]
sapply(data, mean, na.rm = TRUE)
x <- data[2]
sapply(x, mean, na.rm = TRUE)
data[1,1,1,1]
data[1,1,1,1,1]
data[1,1]
sapply(data[2], mean, na.rm = TRUE)
sapply(data[3], mean, na.rm = TRUE)
ls
cd directory
directory
cd $directory
ls
pollutantmean(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
directory <- c("/Users/damyant_gill/Documents/Coursera/R\ Programming/Week\ 2/specdata/")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else if(id > 332) {
print("Invalid Id")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data <- read.csv(file)
if (pollutant == "sulfate") {
return sapply(data[2], mean, na.rm = TRUE)
} else if (pollutant = "nitrate") {
return sapply(data[3], mean, na.rm = TRUE)
} else {
print("Invalid pollutant")
return(Null)
}
}
f <- pollutantmean(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
directory <- c("/Users/damyant_gill/Documents/Coursera/R\ Programming/Week\ 2/specdata/")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else if(id > 332) {
print("Invalid Id")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
data <- read.csv(file)
if (pollutant == "sulfate") {
return sapply(data[2], mean, na.rm = TRUE)
} else if (pollutant = "nitrate") {
return sapply(data[3], mean, na.rm = TRUE)
} else {
print("Invalid pollutant")
return(Null)
}
}
source(pollutantmean.R)
source("pollutantmean.R")
directory
source("/Users/damyant_gill/Documents/Coursera/R Programming/ Week 2/pollutantmean.R")
source("/Users/damyant_gill/Documents/Coursera/R Programming/Week 2/pollutantmean.R")
source("/Users/damyant_gill/Documents/Coursera/R Programming/Week 2/pollutantmean.R")
source("/Users/damyant_gill/Documents/Coursera/R Programming/Week 2/pollutantmean.R")
source("/Users/damyant_gill/Documents/Coursera/R Programming/Week 2/pollutantmean.R")
source("/Users/damyant_gill/Documents/Coursera/R Programming/Week 2/pollutantmean.R")
## 'directory' is a character vector of length 1 indicating
pollutantmean(directory, pollutant, id = 1:332) {
mean <- pollutantmean (directory, pollutant, id = 1:332) {
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
## mean; either "sulfate" or "nitrate".
pollutantmean <- function(directory, pollutant, id = 1:332) {
directory <- c("/Users/damyant_gill/Documents/Coursera/R\ Programming/Week\ 2/specdata/")
if(id < 10) {
file <- paste(directory,"00",id,".csv",sep="",collapse="")
} else if(id > 10 && id < 100) {
file <- paste(directory,"0",id,".csv",sep="",collapse="")
} else if(id > 332) {
print("Invalid Id")
} else {
file <- paste(directory,id,".csv",sep="",collapse="")
}
data <- read.csv(file)
if (pollutant == "sulfate") {
mean <- sapply(data[2], mean, na.rm = TRUE)
} else if (pollutant = "nitrate") {
mean <- sapply(data[3], mean, na.rm = TRUE)
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
mean <- pollutantmean("~/Documents/Coursera/R Programming/Week 2/specdata/", "nitrate", 1)
mean
mean[2]
mean[1]
mean[1,]
mean[[2]]
mean[[1]]
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
mean <- pollutantmean("~/Documents/Coursera/R Programming/Week 2/specdata/", "nitrate", 1)
mean
source('~/Documents/Coursera/R Programming/Week 2/pollutantmean.R')
setwd("~/Documents/Coursera/Reproducible Research/Assignment 1/RepData_PeerAssessment1")
data <- read.csv("actvity.csv")
getwd()
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getwd()
data <- read.csv("actvity.csv")
getwd()
read.csv("activity.csv")
data <- read.csv("activity.csv")
summary(data)
daily_activity <- aggregate(formula = steps~date, data = activity,FUN = sum, na.rm=TRUE)
daily_activity <- aggregate(formula = steps~date, data = data,FUN = sum, na.rm=TRUE)
mean_steps <- round(mean(daily_activity$steps), 2)
median_steps <- quantile(x = daily_activity$steps, probs = 0.5)
histogram <-
qplot(x=date, y=steps,
data=subset(activity, complete.cases(activity)),
stat='summary', fun.y=sum, geom='bar') +
labs(title='Figure 1: Number of steps taken daily\n',
y='Total steps per day', x='Date')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
histogram <-
qplot(x=date, y=steps,
data=subset(activity, complete.cases(activity)),
stat='summary', fun.y=sum, geom='bar') +
labs(title='Figure 1: Number of steps taken daily\n',
y='Total steps per day', x='Date')
histogram <-
qplot(x=date, y=steps,
data=subset(data, complete.cases(data)),
stat='summary', fun.y=sum, geom='bar') +
labs(title='Figure 1: Number of steps taken daily\n',
y='Total steps per day', x='Date')
plot(histogram)
interval_activity <- aggregate(formula=steps~interval, data=data, FUN=mean, na.rm=TRUE)
max_steps <- interval_activity[which(interval_activity$steps==max(interval_activity$steps)),]
total_NAs <- sum(!complete.cases(activity))
total_NAs <- sum(!complete.cases(data))
step_NAs <- sum(is.na(data$steps))
dates_in_range <- seq.Date(from = min(data$date), to = max(data$date), by='1 day')
install.packages("date")
library(date)
dates_in_range <- seq.Date(from = min(data$date), to = max(data$date), by='1 day')
min(data$date)
summary(data$date)
min(data$date)
data$date <- as.Date(data$date)
min(data$date)
dates_in_range <- seq.Date(from = min(data$date), to = max(data$date), by='1 day')
date_NAs <- sum(!data$date[complete.cases(data)] %in% dates_in_range)
imputed_activity$week_part <- factor(
ifelse(as.integer(format(imputed_activity$date, format = '%u')) %in% c(1:5),
'weekday', 'weekend'))
mean_ci <- function(data){
m <- mean(data)
data.frame(y=m,
ymin = m-(1.96*sd(data)/sqrt(length(data))),
ymax = m+(1.96*sd(data)/sqrt(length(data))))
}
detach("package:utils", unload=TRUE)
library("utils", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getwd()
getwd()
library(ggplot2)
rm(ls=list())
rm(list=ls())
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
rm(list=ls())
getws()
getwd()
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
url <- "test"
file <- "test"
